//MULTIPLICATION  performs matrix multiplication using LAPACK library dgemm

namespace multiplication{

const int PRINT_DEBUG_STUFF = 0;

/*
A :		DOUBLE PRECISION array of DIMENSION ( LDA, ka )
B :	 	DOUBLE PRECISION array of DIMENSION ( LDB, kb )
*/

function matmul(var A,var B)
{

		var pla = loadlib("linalg_group");
        var lapack = loadlib('liblapack.so');
        if (lapack == null || !lapack)
                die("Cannot find liblapack. Search for the correct paths");
        
        int transa,transb,m,n,k,lda,ldb,ldc;
        transa=transb=ord('N',0);
        m=A.rows;
        n=B.cols;
        k=A.cols;
        lda=ldc=max(1,m);
        ldb=max(1,n);

        var alpha=new 'NumMatrix2D';
        var beta=new 'NumMatrix2D';
        alpha.resize(m,k);
        int i;
        for(i=0;i<m;++i)
        	alpha[i,i]=1;

        var dgemm = dlfunc(lapack, "dgemm_", "vppppppppppppp");
		if(dgemm == null || !dgemm)
                die("Not DGEMM");

        var C=new 'NumMatrix2D';
        C.resize(ldc,n);
        beta.resize(ldc,n);
        dgemm(transa,transb,m,n,k,alpha,A,lda,B,ldb,beta,C,ldc);
        return C;
//C is DOUBLE PRECISION array of DIMENSION ( LDC, n )

}


function max(var a,var b)
{
        return a>b?a:b;
}

function debug(var matrix, string msg, var args [slurpy])
{
    if (PRINT_DEBUG_STUFF) {
        say(sprintf(msg, args));
        say(matrix);
    }
}


}
